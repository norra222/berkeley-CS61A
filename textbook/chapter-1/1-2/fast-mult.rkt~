#lang racket
(require racket/trace)

(define (fast-mult a b)
  (cond ((= b 1) a)
        ((even? b) (fast-mult (double a) (halve b)))
        (else (+ a (fast-mult a (- b 1))))))

(define (double a) (+ a a))
(define (halve a) (/ a 2))
(define (even? n) (= (remainder n 2) 0))

(trace fast-mult)
(fast-mult 5 5)